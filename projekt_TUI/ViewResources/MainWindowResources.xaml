<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:projekt_TUI.ViewModels"
                    xmlns:vw="clr-namespace:projekt_TUI.Views"
                    >

    <!--here we connect view with viewmodels for tabs-->
   
    <DataTemplate DataType="{x:Type vm:AllItemsViewModel}">
        <vw:AllItemsView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NewItemViewModel}">
        <vw:NewItemView/>
    </DataTemplate>

<!--MAIN WINDOW ELEMENTS STYLES -->
    <Style x:Key="ToolBarToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Width" Value="35"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Background" Value="#BCCEF8"/>
        <Style.Resources>
            <Style TargetType="Image">
                <Setter Property="Width" Value="29"/>
                <Setter Property="Height" Value="29"/>
                <!-- Add any other setters for Image style -->
            </Style>
        </Style.Resources>
    </Style>
    
    <Style x:Key="ToolBarToggleAutoWidth" TargetType="ToggleButton" BasedOn="{StaticResource ToolBarToggleButtonStyle}">
        <Setter Property="Width" Value="auto"/>
    </Style>

    <Style x:Key="MainBg" TargetType="Control">
        <Setter Property="Background" Value="#CDFCF6"/>
    </Style>

    <Style x:Key="ToolBarToggleTextBox" TargetType="TextBox" BasedOn="{StaticResource MainBg}">
        <Setter Property="Width" Value="70"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="ToolBarToggleComboBox" TargetType="ComboBox" BasedOn="{StaticResource MainBg}">
        <Setter Property="Width" Value="70"/>
    </Style>

    <Style x:Key="MenuItemWithPadding" TargetType="MenuItem">
        <Setter Property="Padding" Value="10 5"/>
    </Style>



    <Style x:Key="ToolBarComboBoxStyle" TargetType="ComboBox">
        <!-- Add any desired style setters for the ComboBox here -->
    </Style>

    <Style x:Key="ToolBarTextBoxStyle" TargetType="TextBox">
        <Setter Property="Width" Value="70"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Background" Value="#CDFCF6"/>
    </Style>

    <Style x:Key="Footer" TargetType="StatusBar">
        <Setter Property="Padding" Value="5"/>
        <Style.Resources>
            <Style TargetType="StackPanel">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Style.Resources>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Margin" Value="5,0,0,0"/>
                    </Style>
                </Style.Resources>
            </Style>
            <Style TargetType="Image">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="15"/>
                <Setter Property="Stretch" Value="Fill"/>
            </Style>
            <Style TargetType="ProgressBar">
                <Setter Property="Width" Value="300"/>
                <Setter Property="Height" Value="5"/>
                <Setter Property="Minimum" Value="0"/>
                <Setter Property="Maximum" Value="100"/>
                <Setter Property="Value" Value="75"/>
                <Setter Property="IsIndeterminate" Value="True"/>
            </Style>
        </Style.Resources>
    </Style>


    <!--END OFMAIN WINDOW ELEMENTS STYLES -->




    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                   
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding DisplayName}" Command="{Binding Path=Command}" Margin="1" Padding="7" Background="#BCCEF8" BorderThickness="1"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Comic Sans MS" 
        FontSize="10" 
        Margin="0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>


</ResourceDictionary>